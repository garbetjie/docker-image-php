FROM alpine:3.8

# Set environment variables based on build arg values.
ENV UID=65534 \
    GID=65534 \
	\
    WEBROOT=/app \
    TIMEOUT=60 \
    SSL_ENABLED=false \
    SSL_CERT_URL="" \
    SSL_KEY_URL="" \
    HSTS_ENABLED=false \
    HSTS_MAX_AGE=0 \
    \
	FPM_MAX_CHILDREN=0 \
    FPM_MAX_REQUESTS=10000 \
    FPM_MAX_SPARE_SERVERS=15 \
    FPM_MIN_SPARE_SERVERS=5 \
    FPM_PM=static \
    FPM_STATUS_IPS="127.0.0.1" \
    \
    TIMEZONE="Etc/UTC" \
    DISPLAY_ERRORS=Off \
    ERROR_REPORTING="E_ALL & ~E_DEPRECATED & ~E_STRICT" \
    HTML_ERRORS="Off" \
    MAX_EXECUTION_TIME=30 \
    MEMORY_LIMIT="64M" \
    MAX_REQUEST_SIZE="8M" \
    SESSION_SAVE_HANDLER="files" \
    SESSION_SAVE_PATH="/tmp/sessions" \
    UPLOAD_MAX_FILESIZE="2M" \
    \
    XDEBUG_IDE_KEY="IDEKEY" \
    XDEBUG_REMOTE_AUTOSTART=0 \
    XDEBUG_REMOTE_HOST="192.168.99.1" \
    XDEBUG_REMOTE_PORT=9000 \
    XDEBUG_SERVER_NAME="\$server_name" \
    \
    NEWRELIC_APP_NAME="" \
    NEWRELIC_AUTORUM_ENABLED=0 \
    NEWRELIC_LABELS="" \
    NEWRELIC_LICENCE=""

ENV NEWRELIC_VERSION="8.1.0.209" \
	PHPRC="/etc/php" \
	PHP_INI_SCAN_DIR="/etc/php/conf.d"

# Ensure required directories exist.
RUN set -e; \
	mkdir -p /opt /app /run; \
	apk add --no-cache ca-certificates dumb-init su-exec nginx gettext openssl shadow;

# Install the PHP extensions already available in Alpine.
RUN set -e; \
	apk add --no-cache \
		php7 php7-amqp php7-apcu php7-bcmath php7-bz2 php7-ctype php7-curl \
		php7-dom php7-exif php7-fpm php7-fileinfo php7-ftp php7-gd php7-gettext php7-gmp \
		php7-iconv php7-intl php7-json php7-mbstring php7-memcached php7-mysqlnd php7-opcache \
		php7-openssl php7-pdo_mysql php7-pdo_sqlite php7-phar php7-redis php7-session php7-simplexml \
        php7-soap php7-sodium php7-sqlite3 php7-tokenizer php7-xml php7-xmlwriter php7-zip \
        php7-zlib; \
	rm -rf /etc/nginx /etc/php7; \
    ln -s /usr/sbin/php-fpm7 /usr/bin/php-fpm; \
    mkdir -p /run/nginx;

ONBUILD ARG NEWRELIC_ENABLED=false
ONBUILD ARG XDEBUG_ENABLED=false
ONBUILD ARG STACKDRIVER_TRACING_ENABLED=false

# Install Opencensus for Stackdriver Tracing.
ONBUILD RUN set -e; \
    if [ "$STACKDRIVER_TRACING_ENABLED" != "true" ]; then \
        rm -f $PHPRC/conf.d/*-opencensus.ini; \
        exit 0; \
    fi; \
    apk add --no-cache --virtual .build-deps build-base php7-dev php7-pear zlib-dev; \
    pecl install install opencensus-alpha; \
    rm -rf /tmp/pear /etc/php7 /usr/share/php7/test; \
    cd /usr/share/php7/; \
    rm -rf .channels .depdb .depdblock .filemap .lock .registry; \
    apk del --no-cache .build-deps

# Download, clean up and symlink New Relic extension. Only if it is enabled.
ONBUILD RUN set -e; \
	if [ "$NEWRELIC_ENABLED" != "true" ]; then \
        rm $PHPRC/conf.d/30-newrelic.ini; \
        exit 0; \
    fi; \
	mkdir -p /var/log/newrelic; \
	wget https://download.newrelic.com/php_agent/archive/${NEWRELIC_VERSION}/newrelic-php5-${NEWRELIC_VERSION}-linux-musl.tar.gz -O- | tar -xz -C /tmp; \
	mv /tmp/newrelic-php5-${NEWRELIC_VERSION}-linux-musl /opt/newrelic; \
	find /opt/newrelic/agent/x64 -type f ! -name "newrelic-$(php -n -i | grep -F 'PHP Extension =' | sed -e 's/PHP Extension => //').so" -delete; \
	ln -s "$(find /opt/newrelic/agent/x64 -iname '*.so' | head -n 1)" $(php -n -r 'echo ini_get("extension_dir");')/newrelic.so;

# Install XDebug if required.
ONBUILD run set -e; \
    if [ "$XDEBUG_ENABLED" != "true" ]; then \
        rm $PHPRC/conf.d/30-xdebug.ini; \
        exit 0; \
    fi; \
    apk add --no-cache php7-xdebug; \
    rm -rf /etc/php7;

COPY /fs /
ENTRYPOINT ["/init"]
WORKDIR /app

EXPOSE 80/tcp 443/tcp

LABEL maintainer="geoff@garbers.co.za" \
      org.label-schema.vcs-url="https://github.com/garbetjie/docker-image-php"
